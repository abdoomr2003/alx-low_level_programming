#include <stdio.h>
#include <stdlib.h>

int _isdigit(char c)
{
    return (c >= '0' && c <= '9');
}

int _strlen(char *str)
{
    int len = 0;
    while (str[len] != '\0')
        len++;
    return len;
}

void _multiply(char *num1, char *num2)
{
    int len1 = _strlen(num1);
    int len2 = _strlen(num2);
    int *result = malloc(sizeof(int) * (len1 + len2));

    if (!result)
    {
        printf("Error\n");
        exit(98);
    }

    for (int i = 0; i < len1 + len2; i++)
        result[i] = 0;

    for (int i = len1 - 1; i >= 0; i--)
    {
        for (int j = len2 - 1; j >= 0; j--)
        {
            int product = (num1[i] - '0') * (num2[j] - '0');
            int sum = product + result[i + j + 1];
            result[i + j + 1] = sum % 10;
            result[i + j] += sum / 10;
        }
    }

    int printed = 0;
    for (int i = 0; i < len1 + len2; i++)
    {
        if (result[i] != 0 || printed)
        {
            printf("%d", result[i]);
            printed = 1;
        }
    }

    if (!printed)
        printf("0");
    printf("\n");

    free(result);
}

int main(int argc, char *argv[])
{
    if (argc != 3)
    {
        printf("Error\n");
        return 98;
    }

    char *num1 = argv[1];
    char *num2 = argv[2];

    for (int i = 0; num1[i] != '\0'; i++)
    {
        if (!_isdigit(num1[i]))
        {
            printf("Error\n");
            return 98;
        }
    }

    for (int i = 0; num2[i] != '\0'; i++)
    {
        if (!_isdigit(num2[i]))
        {
            printf("Error\n");
            return 98;
        }
    }

    _multiply(num1, num2);
	return 0;
}

